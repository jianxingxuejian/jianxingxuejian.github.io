import{d as n,o as a,s as l,t as p}from"./index.5c678a4c.js";const o={class:"prose"},e=p(`<h1>TS \u5907\u5FD8\u5F55</h1><p><strong>\u53EF\u80FD\u7528\u5230\u7684\u5DE5\u5177\u7C7B\u578B\uFF1A</strong></p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#1E1E1E;"><code class=""><span class="line"><span style="color:#6A9955;">/** \u53EF\u4E3Anull */</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Nullable</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/** \u4E0D\u53EF\u4E3Anull */</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">NonNullable</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">null</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">undefined</span><span style="color:#D4D4D4;"> ? </span><span style="color:#4EC9B0;">never</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">T</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Arrayable</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">[]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/** \u5C06\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009\u4E14\u53EF\u4E3Anull */</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">NullablePartial</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">&gt; = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  [</span><span style="color:#4EC9B0;">P</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">in</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">keyof</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">]?: </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">[</span><span style="color:#4EC9B0;">P</span><span style="color:#D4D4D4;">] | </span><span style="color:#4EC9B0;">null</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/** \u5C06\u5BF9\u8C61\u7684\u90E8\u5206\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009 */</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Optional</span><span style="color:#D4D4D4;">&lt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Record</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;">&gt;,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#4EC9B0;">K</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">keyof</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">keyof</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">T</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt; = </span><span style="color:#4EC9B0;">Omit</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">K</span><span style="color:#D4D4D4;">&gt; &amp; </span><span style="color:#4EC9B0;">Partial</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Pick</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">K</span><span style="color:#D4D4D4;">&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/** \u8054\u5408\u7C7B\u578B\u8F6C\u4EA4\u53C9\u7C7B\u578B */</span></span>
<span class="line"><span style="color:#6A9955;">// https://stackoverflow.com/questions/50374908</span></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">UnionToIntersection</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;">&gt; = (</span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">any</span><span style="color:#D4D4D4;"> ? (</span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">U</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">never</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">k</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">infer</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">I</span></span>
<span class="line"><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">void</span></span>
<span class="line"><span style="color:#D4D4D4;">  ? </span><span style="color:#4EC9B0;">I</span></span>
<span class="line"><span style="color:#D4D4D4;">  : </span><span style="color:#4EC9B0;">never</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#FFFFFF;"><code class=""><span class="line"><span style="color:#008000;">/** \u53EF\u4E3Anull */</span></span>
<span class="line"><span style="color:#0000FF;">type</span><span style="color:#000000;"> </span><span style="color:#267F99;">Nullable</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">T</span><span style="color:#000000;">&gt; = </span><span style="color:#267F99;">T</span><span style="color:#000000;"> | </span><span style="color:#267F99;">null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">/** \u4E0D\u53EF\u4E3Anull */</span></span>
<span class="line"><span style="color:#0000FF;">type</span><span style="color:#000000;"> </span><span style="color:#267F99;">NonNullable</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">T</span><span style="color:#000000;">&gt; = </span><span style="color:#267F99;">T</span><span style="color:#000000;"> </span><span style="color:#0000FF;">extends</span><span style="color:#000000;"> </span><span style="color:#267F99;">null</span><span style="color:#000000;"> | </span><span style="color:#267F99;">undefined</span><span style="color:#000000;"> ? </span><span style="color:#267F99;">never</span><span style="color:#000000;"> : </span><span style="color:#267F99;">T</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0000FF;">type</span><span style="color:#000000;"> </span><span style="color:#267F99;">Arrayable</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">T</span><span style="color:#000000;">&gt; = </span><span style="color:#267F99;">T</span><span style="color:#000000;"> | </span><span style="color:#267F99;">T</span><span style="color:#000000;">[]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">/** \u5C06\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009\u4E14\u53EF\u4E3Anull */</span></span>
<span class="line"><span style="color:#0000FF;">type</span><span style="color:#000000;"> </span><span style="color:#267F99;">NullablePartial</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">T</span><span style="color:#000000;">&gt; = {</span></span>
<span class="line"><span style="color:#000000;">  [</span><span style="color:#267F99;">P</span><span style="color:#000000;"> </span><span style="color:#0000FF;">in</span><span style="color:#000000;"> </span><span style="color:#0000FF;">keyof</span><span style="color:#000000;"> </span><span style="color:#267F99;">T</span><span style="color:#000000;">]?: </span><span style="color:#267F99;">T</span><span style="color:#000000;">[</span><span style="color:#267F99;">P</span><span style="color:#000000;">] | </span><span style="color:#267F99;">null</span></span>
<span class="line"><span style="color:#000000;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">/** \u5C06\u5BF9\u8C61\u7684\u90E8\u5206\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009 */</span></span>
<span class="line"><span style="color:#0000FF;">type</span><span style="color:#000000;"> </span><span style="color:#267F99;">Optional</span><span style="color:#000000;">&lt;</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#267F99;">T</span><span style="color:#000000;"> </span><span style="color:#0000FF;">extends</span><span style="color:#000000;"> </span><span style="color:#267F99;">Record</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">string</span><span style="color:#000000;">, </span><span style="color:#267F99;">any</span><span style="color:#000000;">&gt;,</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#267F99;">K</span><span style="color:#000000;"> </span><span style="color:#0000FF;">extends</span><span style="color:#000000;"> </span><span style="color:#0000FF;">keyof</span><span style="color:#000000;"> </span><span style="color:#267F99;">T</span><span style="color:#000000;"> = </span><span style="color:#0000FF;">keyof</span><span style="color:#000000;"> </span><span style="color:#267F99;">T</span></span>
<span class="line"><span style="color:#000000;">&gt; = </span><span style="color:#267F99;">Omit</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">T</span><span style="color:#000000;">, </span><span style="color:#267F99;">K</span><span style="color:#000000;">&gt; &amp; </span><span style="color:#267F99;">Partial</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">Pick</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">T</span><span style="color:#000000;">, </span><span style="color:#267F99;">K</span><span style="color:#000000;">&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#008000;">/** \u8054\u5408\u7C7B\u578B\u8F6C\u4EA4\u53C9\u7C7B\u578B */</span></span>
<span class="line"><span style="color:#008000;">// https://stackoverflow.com/questions/50374908</span></span>
<span class="line"><span style="color:#0000FF;">type</span><span style="color:#000000;"> </span><span style="color:#267F99;">UnionToIntersection</span><span style="color:#000000;">&lt;</span><span style="color:#267F99;">U</span><span style="color:#000000;">&gt; = (</span><span style="color:#267F99;">U</span><span style="color:#000000;"> </span><span style="color:#0000FF;">extends</span><span style="color:#000000;"> </span><span style="color:#267F99;">any</span><span style="color:#000000;"> ? (</span><span style="color:#001080;">k</span><span style="color:#000000;">: </span><span style="color:#267F99;">U</span><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> </span><span style="color:#267F99;">void</span><span style="color:#000000;"> : </span><span style="color:#267F99;">never</span><span style="color:#000000;">) </span><span style="color:#0000FF;">extends</span><span style="color:#000000;"> (</span></span>
<span class="line"><span style="color:#000000;">  </span><span style="color:#001080;">k</span><span style="color:#000000;">: </span><span style="color:#0000FF;">infer</span><span style="color:#000000;"> </span><span style="color:#267F99;">I</span></span>
<span class="line"><span style="color:#000000;">) </span><span style="color:#0000FF;">=&gt;</span><span style="color:#000000;"> </span><span style="color:#267F99;">void</span></span>
<span class="line"><span style="color:#000000;">  ? </span><span style="color:#267F99;">I</span></span>
<span class="line"><span style="color:#000000;">  : </span><span style="color:#267F99;">never</span></span>
<span class="line"></span></code></pre></div></code></pre><p><strong>\u53EF\u80FD\u7528\u5230\u7684\u7C7B\u578B\u5B9A\u4E49\u624B\u6CD5\uFF1A</strong></p><ul><li>\u4E92\u65A5\u5C5E\u6027<pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#1E1E1E;"><code class=""><span class="line"><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Test</span><span style="color:#D4D4D4;"> = ({ </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;"> } &amp; { </span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">never</span><span style="color:#D4D4D4;"> }) | ({ </span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">never</span><span style="color:#D4D4D4;"> } &amp; { </span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">test1</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Test</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;"> } </span><span style="color:#6A9955;">// OK</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">test2</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Test</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">age:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;"> } </span><span style="color:#6A9955;">// OK</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">test3</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Test</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;aaa&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">age:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;"> } </span><span style="color:#6A9955;">// Error</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#FFFFFF;"><code class=""><span class="line"><span style="color:#0000FF;">type</span><span style="color:#000000;"> </span><span style="color:#267F99;">Test</span><span style="color:#000000;"> = ({ </span><span style="color:#001080;">name</span><span style="color:#000000;">: </span><span style="color:#267F99;">string</span><span style="color:#000000;"> } &amp; { </span><span style="color:#001080;">age</span><span style="color:#000000;">?: </span><span style="color:#267F99;">never</span><span style="color:#000000;"> }) | ({ </span><span style="color:#001080;">name</span><span style="color:#000000;">?: </span><span style="color:#267F99;">never</span><span style="color:#000000;"> } &amp; { </span><span style="color:#001080;">age</span><span style="color:#000000;">: </span><span style="color:#267F99;">number</span><span style="color:#000000;"> })</span></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#0070C1;">test1</span><span style="color:#000000;">: </span><span style="color:#267F99;">Test</span><span style="color:#000000;"> = { </span><span style="color:#001080;">name:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;aaa&#39;</span><span style="color:#000000;"> } </span><span style="color:#008000;">// OK</span></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#0070C1;">test2</span><span style="color:#000000;">: </span><span style="color:#267F99;">Test</span><span style="color:#000000;"> = { </span><span style="color:#001080;">age:</span><span style="color:#000000;"> </span><span style="color:#098658;">11</span><span style="color:#000000;"> } </span><span style="color:#008000;">// OK</span></span>
<span class="line"><span style="color:#0000FF;">const</span><span style="color:#000000;"> </span><span style="color:#0070C1;">test3</span><span style="color:#000000;">: </span><span style="color:#267F99;">Test</span><span style="color:#000000;"> = { </span><span style="color:#001080;">name:</span><span style="color:#000000;"> </span><span style="color:#A31515;">&#39;aaa&#39;</span><span style="color:#000000;">, </span><span style="color:#001080;">age:</span><span style="color:#000000;"> </span><span style="color:#098658;">11</span><span style="color:#000000;"> } </span><span style="color:#008000;">// Error</span></span>
<span class="line"></span></code></pre></div></code></pre></li></ul>`,5),t=[e],F={title:"TS\u5907\u5FD8\u5F55(TODO)",date:"2022-09-26T00:00:00.000Z",wordCount:100,tags:["ts"]},u="",i=n({__name:"TypeScript-memo",setup(c,{expose:s}){return s({frontmatter:{title:"TS\u5907\u5FD8\u5F55(TODO)",date:"2022-09-26T00:00:00.000Z",wordCount:100,tags:["ts"]},excerpt:void 0}),(r,y)=>(a(),l("div",o,t))}});export{i as default,u as excerpt,F as frontmatter};
